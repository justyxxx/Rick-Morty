{"version":3,"sources":["containers/App.css","components/UI/Spinner/Spinner.css","hoc/Layout/Layout.css","components/List/List.css","components/GenderGraph/GenderGraph.css","components/Header/Header.css","store/actions/actionTypes.js","store/actions/list.js","context/app-context.js","components/UI/Spinner/Spinner.js","utils/localization.js","components/UI/Card/Card.js","containers/List/ListBuilder.js","components/List/List.js","components/Detail/Detail.js","containers/Detail/DetailBuilder.js","components/UI/Charts/ApexChart.js","containers/GenderGraph/GraphBuilder.js","components/GenderGraph/GenderGraph.js","store/reducers/locale.js","components/Header/Header.js","containers/Header/HeaderBuilder.js","hoc/Layout/Layout.js","containers/App.js","serviceWorker.js","store/reducers/list.js","axios-rick-morty.js","store/sagas/list.js","store/sagas/index.js","index.js","components/Detail/Detail.css","components/UI/Card/Card.css"],"names":["module","exports","App","Loader","load2","Layout","List","GenderGraph","Header","AUTO_INIT_LIST","LIST_PROCESS","listInit","type","listProcess","page","actionTypes","listSuccess","data","listFail","error","app_context","React","characterId","setCharacterId","currentPage","setCurrentPage","showDrawer","setShowDrawer","Spinner_Spinner","spinner","react_default","a","createElement","className","classes","ruLocale","locale.navigation.details","locale.navigation.next","locale.navigation.prev","locale.navigation.total.pages","locale.navigation.total.chars","locale.navigation.cur.page","locale.navigation.Name","locale.navigation.Species","locale.navigation.Location","locale.navigation.Gender","locale.navigation.Detail","locale.navigation.List","enLocale","parseParams","locale","params","newLocale","par","index","getLocale","key","_len","arguments","length","expressions","Array","_key","Meta","Card","Card_Card","_React$Component","CardComp","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","maxWidth","window","card","style","margin","bodyStyle","padding","cover","avatar","shape","size","src","props","img","Cover","Avatar","title","description","switch","Component","connect","mapStateToProps","state","characters","results","ListBuilder","_useContext","useContext","ScreenWidth","innerWidth","avatarsArr","character","id","image","es_switch","checked","onChange","event","showDetails","val","Number","listStyle","display","flexDirection","components_List_List","row","col","span","List_ListBuilder","components_Detail_Detail","Detail","detailData","Fragment","alt","name","marginLeft","Spec","species","location","gender","detailDrawer","drawer","ShowDrawer","height","placement","closable","onClose","visible","undefined","Drawer","mapStateToprops","loaded","DetailBuilder","onCloseDrawer","ApexChart","width","react_apexcharts_min_default","options","series","GraphBuilder","_useState","useState","plotOptions","bar","horizontal","distributed","yaxis","labels","dataLabels","enabled","fontSize","colors","xaxis","trim","categories","theme","mode","palette","_useState2","slicedToArray","chartData","setChartData","useEffect","countGender","male","female","unknown","element","newSeries","updatedSeries","objectSpread2","components_GenderGraph_GenderGraph","GenderGraph_GraphBuilder","initialState","actionChangeUserLocale","reducers_locale","localeReducer","action","components_Header_Header","handleChangeLocale","menu","es_menu","Item","onClick","active","es_button","Group","disabled","firstPage","icon","lastPage","dropdown","Button","overlay","DownOutlined","total","totalPages","info","mapDispatchToProps","dispatch","listProcessHandler","actions","changeLocaleHandler","HeaderBuilder","console","count","pages","changePage","onChangePage","next","prev","changeLocale","hoc_Layout_Layout","Header_HeaderBuilder","Detail_DetailBuilder","isLoading","autoInitListHandler","react","startId","_useState3","_useState4","_useState5","_useState6","Provider","setId","setPage","setDrawer","isLocalhost","Boolean","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","list","listReducer","axios_rick_morty","axios","baseURL","listProcessSaga","autoInitListSaga","response","regenerator_default","wrap","_context","put","instance","sent","t0","message","stop","_marked","_context2","_marked2","watchList","takeEvery","sagas_marked","composeEnhancers","composeWithDevTools","trace","traceLimit","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","redux_thunk_es","app","es","src_containers_App","ReactDOM","document","URL","process","href","publicUrl","origin","concat","fetch","contentType","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.25a2ce3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2NQx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load2\":\"Spinner__load2__1N7mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout__2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"List__List__1YcFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GenderGraph\":\"GenderGraph__GenderGraph__CxS59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header__Header__oE2FH\"};","export const AUTO_INIT_LIST = 'AUTO_INIT_LIST'\r\nexport const LIST_INIT = 'LIST_INIT'\r\nexport const LIST_PROCESS = 'LIST_PROCESS'\r\nexport const LIST_SUCCESS = 'LIST_SUCCESS'\r\nexport const LIST_FAIL = 'LIST_FAIL'","import * as actionTypes from './actionTypes';\r\n\r\nexport const autoInitList = () => {\r\n    return {\r\n        type: actionTypes.AUTO_INIT_LIST\r\n    };\r\n};\r\nexport const listInit = () => {\r\n    return {\r\n        type: actionTypes.LIST_INIT\r\n    };\r\n};\r\nexport const listProcess = page => {\r\n    return {\r\n        type: actionTypes.LIST_PROCESS,\r\n        page\r\n    };\r\n};\r\nexport const listSuccess = data => {\r\n    return {\r\n        type: actionTypes.LIST_SUCCESS,\r\n        data\r\n    };\r\n};\r\nexport const listFail = error => {\r\n    return {\r\n        type: actionTypes.LIST_FAIL,\t\r\n        error\r\n    };\r\n};","import React from 'react';\r\nconst appContext = React.createContext({\r\n    characterId: null,\r\n    setCharacterId: () => {},\r\n    currentPage: null,\r\n    setCurrentPage: () => {},\r\n    showDrawer: false,\r\n    setShowDrawer: () => {}\r\n});\r\nexport default appContext","import React from 'react';\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","const ruLocale = {\r\n\t'locale.navigation.details': 'Подробнее',\r\n\t'locale.navigation.next': 'След',\r\n\t'locale.navigation.prev': 'Пред',\r\n\t'locale.navigation.total.pages': 'Всего страниц',\r\n\t'locale.navigation.total.chars': 'Всего персонажей',\r\n\t'locale.navigation.cur.page': 'Текущая страница',\r\n\t'locale.navigation.Name': 'Имя',\r\n\t'locale.navigation.Species': 'Раса',\r\n\t'locale.navigation.Location': 'Локация',\r\n\t'locale.navigation.Gender': 'Пол',\r\n\t'locale.navigation.Detail': 'О персонаже',\r\n\t'locale.navigation.List': 'Список персонажей'\r\n\t\r\n\r\n\t\r\n}\r\n\r\nconst enLocale = {\r\n\t'locale.navigation.details': 'Details',\r\n\t'locale.navigation.next': 'Next',\r\n\t'locale.navigation.prev': 'Prev',\r\n\t'locale.navigation.total.pages': 'Total pages',\r\n\t'locale.navigation.total.chars': 'Total chars',\r\n\t'locale.navigation.cur.page': 'Current page',\r\n\t'locale.navigation.Name': 'Name',\r\n\t'locale.navigation.Species': 'Species',\r\n\t'locale.navigation.Location': 'Location',\r\n\t'locale.navigation.Gender': 'Gender',\r\n\t'locale.navigation.List': 'Characters List',\r\n\t'locale.navigation.Detail': 'Character detail'\r\n}\r\n\r\nconst parseParams = (locale, params) => {\r\n\tlet newLocale = locale\r\n\tparams.forEach((par, index) => {\r\n\t\t\tnewLocale = newLocale.replace(`{${index}}`, par)\r\n\t})\r\n\treturn newLocale\r\n}\r\n\r\nexport const getLocale = (locale, key, ...expressions) => {\r\n\tswitch (locale) {\r\n\t\t\tcase 'ru': {\r\n\t\t\t\t\treturn parseParams(ruLocale[key], expressions)\r\n\t\t\t}\r\n\t\t\tcase 'en': {\r\n\t\t\t\t\treturn parseParams(enLocale[key], expressions)\r\n\t\t\t}\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport { Card, Avatar } from \"antd\";\r\nimport classes from \"./Card.css\";\r\nimport { getLocale } from \"../../../utils/localization\";\r\nconst { Meta } = Card;\r\nconst env = process.env.NODE_ENV === \"development\";\r\n\r\nexport class CardComp extends React.Component {\r\n  render() {\r\n    const maxWidth = window.innerWidth >= 992;\r\n    return (\r\n      <Card\r\n        className={classes.Card}\r\n        style={!env && maxWidth ? { margin: \"0.6rem 2.5rem 0 3rem\" } : null}\r\n        bodyStyle={{ padding: 10 }}\r\n        cover={\r\n          <Avatar\r\n            shape=\"square\"\r\n            size={54}\r\n            src={this.props.img}\r\n            className={classes.Cover}\r\n          />\r\n        }\r\n      >\r\n        <Meta\r\n          avatar={\r\n            <Avatar\r\n              shape=\"square\"\r\n              size={100}\r\n              src={this.props.img}\r\n              className={classes.Avatar}\r\n            />\r\n          }\r\n          title={getLocale(this.props.locale, \"locale.navigation.Detail\")}\r\n          description={this.props.switch}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default CardComp;\r\n","import React, {useContext, useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Card from '../../components/UI/Card/Card';\r\nimport {Switch} from 'antd';\r\nimport AppContext from '../../context/app-context';\r\n\r\nexport const ListBuilder = props => {\r\n\r\n    const {characterId, setCharacterId, setShowDrawer} = useContext(AppContext);    \r\n    const ScreenWidth = window.innerWidth;\r\n\t\tconst showDetails = (val) => {        \r\n            val = Number(val);\r\n            if (ScreenWidth < 992) {\r\n                setCharacterId(val);\r\n                setShowDrawer(true)\r\n                return\r\n               }        \r\n\t\t\tval === characterId ? setCharacterId(null) : setCharacterId(val)\r\n\t};    \r\n\r\n    const avatarsArr = props.characters.map(character => {\r\n        return <li \r\n            key={character.id} \r\n            id={character.id}>\r\n            <Card\r\n                img={character.image}      \r\n                switch = {\r\n                    <Switch\r\n                        id={character.id}\r\n                        checked={characterId === character.id }\r\n                        onChange={(checked, event) => showDetails(event.target.id)}\r\n                    />\r\n                }\r\n                locale={props.locale}\r\n            />\r\n        </li>\r\n    });\r\n\r\n    return(\r\n        <ul style={{listStyle: 'none', padding: 0, display: 'flex', flexDirection: 'column'}}>\r\n            {avatarsArr}\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.listReducer.results,\r\n        locale: state.localeReducer.locale\r\n    }\r\n};\r\nexport default connect(mapStateToProps)(ListBuilder)","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport ListBuilder from '../../containers/List/ListBuilder';\r\nimport classes from './List.css';\r\nimport { getLocale } from '../../utils/localization';\r\n\r\nconst List = (props) => (\r\n    <Row>\r\n      <Col className={classes.List} span={24}>\r\n          <div>\r\n            <h2>{getLocale(props.locale, 'locale.navigation.List')}</h2>\r\n          </div>\r\n          <ListBuilder />\r\n      </Col>      \r\n    </Row>\r\n);\r\nexport default List","import React from \"react\";\r\nimport { Row, Col, Drawer } from \"antd\";\r\nimport classes from \"./Detail.css\";\r\nimport { getLocale } from \"../../utils/localization\";\r\n\r\nconst Detail = props => {\r\n  const env = process.env.NODE_ENV === 'development';\r\n  const detailData = (\r\n    <>\r\n       <img src={props.img} alt={props.name} style={!env ? {marginLeft: '1rem'} : null}/>\r\n      <div className={classes.Spec}>\r\n        <h1>{getLocale(props.locale, \"locale.navigation.Detail\")}</h1>\r\n        <h4>{getLocale(props.locale, \"locale.navigation.Name\")}:</h4>\r\n        <h3>{props.name}</h3>\r\n        <h4>{getLocale(props.locale, \"locale.navigation.Species\")}:</h4>\r\n        <h3>{props.species}</h3>\r\n        <h4>{getLocale(props.locale, \"locale.navigation.Location\")}:</h4>\r\n        <h3>{props.location}</h3>\r\n        <h4>{getLocale(props.locale, \"locale.navigation.Gender\")}:</h4>\r\n        <h3>{props.gender}</h3>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const detailDrawer = (\r\n    <Drawer\r\n      className={classes.ShowDrawer}\r\n      height=\"80%\"\r\n      placement=\"bottom\"\r\n      closable={false}\r\n      onClose={props.onClose}\r\n      visible={props.showDrawer || props.showDrawer !== undefined}\r\n    >\r\n      <div className={classes.Drawer}>{detailData}</div>\r\n    </Drawer>\r\n  );\r\n  return (\r\n    <Row>\r\n      <Col span={24} className={classes.Detail} style={{ display: \"flex\" }}>\r\n        {detailDrawer}\r\n        {detailData}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default Detail;\r\n","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from '../../context/app-context';\r\nimport Detail from '../../components/Detail/Detail';\r\n\r\nexport const DetailBuilder = props => {\r\n    const {characterId, setCharacterId, showDrawer, setShowDrawer} = useContext(AppContext);\r\n    const character = props.characters.find(character => character.id === characterId);\r\n    const onCloseDrawer = () => {        \r\n        setShowDrawer(false);\r\n        setCharacterId(null);\r\n\r\n    }\r\n\r\n    return (\r\n        !characterId || !props.loaded ? <Detail /> :\r\n        <Detail\r\n        img={character.image}\r\n        name={character.name}\r\n        species={character.species}\r\n        location={character.location.name}\r\n        gender={character.gender}\r\n        locale={props.locale}\r\n        onClose={onCloseDrawer}\r\n        showDrawer={showDrawer}\r\n        />\r\n    )\r\n};\r\nconst mapStateToprops = state => {\r\n    return {\r\n        characters : state.listReducer.results,\r\n        loaded: state.listReducer.loaded,\r\n        locale: state.localeReducer.locale\r\n    }\r\n};\r\nexport default connect(mapStateToprops)(DetailBuilder)","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass ChartRender extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\" >\r\n                <div className=\"row\">\r\n                    <div className=\"mixed-chart\" style={{ width: \"98%\" }}>\r\n                        <Chart\r\n                            options={this.props.options}\r\n                            series={this.props.series}\r\n                            type={this.props.type}\r\n                            height={this.props.height}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ChartRender","import React , {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Chart from '../../components/UI/Charts/ApexChart';\r\n\r\nexport const GraphBuilder = props => {\r\n    const [chartData, setChartData] = useState({\r\n        options: {            \r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                    distributed: true\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    maxWidth: 360\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                style: {\r\n                    fontSize: '16px',\r\n                    colors: ['#fff']\r\n                }\r\n            },\r\n            xaxis: {                \r\n                labels: {\r\n                    trim: false,                    \r\n                },\r\n                categories: [\"Male\", \"Female\", \"Unknown\"]\r\n            },\r\n            theme: {\r\n                mode: 'light',\r\n                palette: 'palette5'\r\n            }\r\n        },           \r\n        series: [\r\n            {\r\n                name: \"Quantity\",\r\n                data: []\r\n            }\r\n        ]\r\n    });\r\n    const countGender = () => {\r\n        let male = 0,\r\n            female = 0,\r\n            unknown =0;\r\n        props.characters.forEach(element => {            \r\n            if(element.gender === 'Male') male++\r\n            if(element.gender === 'Female') female++\r\n            if(element.gender === 'unknown') unknown++\r\n        });\r\n        const newSeries = [male, female, unknown]\r\n        const updatedSeries = [{\r\n            ...chartData.series[0],\r\n            data: newSeries\r\n        }];\r\n        setChartData({options: chartData.options, series: updatedSeries})\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(props.loaded) countGender()\r\n    }, [])\r\n\r\n    return(\r\n        <Chart \r\n            options={chartData.options}\r\n            series={chartData.series}\r\n            type=\"bar\"\r\n            height=\"250\"\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        characters: state.listReducer.results,\r\n        loaded: state.listReducer.loaded\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(GraphBuilder)","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport classes from './GenderGraph.css';\r\nimport GraphBuilder from '../../containers/GenderGraph/GraphBuilder';\r\n\r\nconst GenderGraph = () => (\r\n\r\n    <Row >\r\n        <Col span={24} className={classes.GenderGraph} >\r\n            <GraphBuilder />\r\n            <h4>This section displays the current List’s gender totals.</h4>\r\n        </Col>      \r\n    </Row>\r\n);\r\nexport default GenderGraph","const CHANGE_LOCALE = 'CHANGE_LOCALE'\r\n\r\nlet initialState = {\r\n    locale: 'ru'\r\n}\r\n\r\nconst localeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LOCALE:\r\n            return {\r\n                ...state,\r\n                locale: action.locale\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actionChangeUserLocale = (locale) => ({\r\n    type: CHANGE_LOCALE,\r\n    locale: locale\r\n})\r\n\r\nexport const changeLocale = (locale) => {\r\n    return (dispatch) => {\r\n        dispatch(actionChangeUserLocale(locale))\r\n    }\r\n}\r\nexport default localeReducer\r\n","import React from 'react'\r\nimport classes from './Header.css';\r\nimport { Button, Icon, Menu, Dropdown,} from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { getLocale } from '../../utils/localization'\r\n\r\nconst Header = props => {\r\n\tconst handleChangeLocale = (locale) => {\r\n\t\tprops.changeLocale(locale)\r\n\t}\r\n\r\n\t\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key=\"1\" onClick={() => handleChangeLocale('ru')} active={props.locale === 'ru'}>>\r\n\t\t\tРусский\r\n    </Menu.Item>\r\n    <Menu.Item key=\"2\" onClick={() => handleChangeLocale('en')} active={props.locale === 'en'}>>\r\n\t\t\tEnglish\r\n    </Menu.Item>\r\n  </Menu>\r\n);\r\n\r\n\treturn (\r\n\t\t<div className={classes.Header}>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button.Group>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"dashed\"\r\n\t\t\t\t\t\tdisabled={props.firstPage}\r\n\t\t\t\t\t\tonClick={() => props.changePage(null, \"prev\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Icon type=\"left\" />\r\n\t\t\t\t\t\t{getLocale(props.locale, 'locale.navigation.prev')}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"dashed\"\r\n\t\t\t\t\t\tdisabled={props.lastPage}\r\n\t\t\t\t\t\tonClick={() => props.changePage(\"next\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{getLocale(props.locale, 'locale.navigation.next')}\r\n\t\t\t\t\t\t<Icon type=\"right\" />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Button.Group>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Dropdown.Button overlay={menu} icon={<DownOutlined style={{ fontSize: '16px'}}/>}>\r\n\t\t\t\t\t\t{props.locale === 'ru' ? 'Язык: Русский' : 'Lang: English'}\r\n\t\t\t\t</Dropdown.Button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<span>{getLocale(props.locale, 'locale.navigation.total.chars')}:</span>\r\n\t\t\t\t<span>{props.total}</span>\r\n\t\t\t\t<span>{getLocale(props.locale, 'locale.navigation.total.pages')}:</span>\r\n\t\t\t\t<span>{props.totalPages}</span>\r\n\t\t\t\t<span>{getLocale(props.locale, 'locale.navigation.cur.page')}:</span>\r\n\t\t\t\t<span>{props.currentPage}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header","import React, {useContext} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport AppContext from '../../context/app-context';\r\nimport * as actions from '../../store/actions';\r\nimport {actionChangeUserLocale} from '../../store/reducers/locale';\r\nimport Header from '../../components/Header/Header';\r\n\r\nexport const HeaderBuilder = props => {\r\n\t\tconsole.log(props)\r\n    const {currentPage, setCurrentPage, setCharacterId} = useContext(AppContext);\r\n    const onChangePage = (next, prev) => {\r\n        if(next) {\r\n            props.listProcessHandler(`?page=${currentPage + 1}`);\r\n            setCharacterId((currentPage + 1) * 20 - 19);\r\n            setCurrentPage(currentPage +1);           \r\n        };\r\n        if(prev) {\r\n            props.listProcessHandler(`?page=${currentPage - 1}`);\r\n            setCharacterId((currentPage - 1) * 20 - 19);\r\n            setCurrentPage(currentPage -1);           \r\n        };\r\n    };  \r\n\r\n    return (\r\n        <Header \r\n            title=\"THE RICK AND MORTY API\"\r\n            total={props.info.count}\r\n            currentPage={currentPage}\r\n            totalPages={props.info.pages} \r\n            changePage={onChangePage}\r\n            firstPage = {currentPage - 1 === 0}\r\n\t\t\t\t\t\tlastPage = {props.info.pages - currentPage === 0}\r\n\t\t\t\t\t\tchangeLocale={props.changeLocaleHandler}\r\n\t\t\t\t\t\tlocale={props.locale}\r\n        />\r\n    )\r\n};\r\nconst mapStateToProps = state => {\r\n    return{\r\n\t\t\t\tinfo: state.listReducer.info,\r\n\t\t\t\tlocale: state.localeReducer.locale\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\t\t\t\tlistProcessHandler: (page) => dispatch(actions.listProcess(page)),\r\n\t\t\t\tchangeLocaleHandler: (locale) => dispatch(actionChangeUserLocale(locale))\r\n\t\t\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderBuilder)","import React from 'react';\nimport classes from './Layout.css';\nimport List from '../../components/List/List';\nimport Detail from '../../containers/Detail/DetailBuilder';\nimport GenderGraph from '../../components/GenderGraph/GenderGraph';\nimport Header from '../../containers/Header/HeaderBuilder';\n\nconst Layout = (props) => {\n    return(\n        <>\n        <Header />\n        <div className={classes.Layout}>\n                <List locale={props.locale}/>\n            <div>\n                <Detail />\n                <GenderGraph />              \n            </div>\n        </div>\n        </>\n    );\n};\nexport default Layout;","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport * as actions from '../store/actions';\nimport classes from './App.css';\nimport AppContext from '../context/app-context';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport Layout from '../hoc/Layout/Layout';\n\nexport const App = props => {\n\n  \n\n  useEffect(()=> {\n    props.autoInitListHandler()\n    console.log(props)\n    // eslint-disable-next-line\n  }, []);\n\n  const ScreenWidth = window.innerWidth;\n  let startId = 1;\n\n  if(ScreenWidth <= 992) startId = null;\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [characterId, setCharacterId] = useState(startId);\n  const [showDrawer, setShowDrawer] = useState(false)\n  \n  const setId = (id) => setCharacterId(id);\n  const setPage = (page) => setCurrentPage(page);\n  const setDrawer = (val) => setShowDrawer(val);\n\n  return (\n    <div className={classes.App} >\n      {props.isLoading ? <Spinner /> : \n      <AppContext.Provider value={{\n        characterId,\n        setCharacterId: setId,\n        currentPage,\n        setCurrentPage: setPage,\n        showDrawer,\n        setShowDrawer: setDrawer\n        }}>\n        <Layout locale={props.locale}/>\n      </AppContext.Provider>\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.listReducer.isLoading,\n    locale: state.localeReducer.locale\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoInitListHandler: () => dispatch(actions.autoInitList())\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n\t\terror: false,\r\n\t\tloaded: false,\r\n    info: {},\r\n    results: []\r\n};\r\n\r\nconst listInit = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: true\r\n    }\r\n};\r\nconst listSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tloaded: true,\r\n        info: action.data.info,\r\n        results: action.data.results\r\n    }\r\n};\r\nconst listFail = (state, action) => {\r\n    return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.data.error\r\n    }\r\n};\r\nconst listReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.LIST_INIT: return listInit(state, action);\r\n        case actionTypes.LIST_SUCCESS: return listSuccess(state, action);\r\n        case actionTypes.LIST_FAIL: return listFail(state, action);\r\n        default: return state\r\n    }\r\n};\r\nexport default listReducer","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://rickandmortyapi.com/api/character/\"\r\n});\r\n\r\nexport default instance;\r\n","import { put } from \"redux-saga/effects\";\r\nimport instance from \"../../axios-rick-morty\";\r\nimport * as actions from \"../actions\";\r\n\r\nexport function* listProcessSaga(action) {\r\n    yield put(actions.listInit());\r\n    try {\r\n        const response = yield instance.get(action.page);\r\n        yield put(actions.listSuccess(response.data))\r\n    }\r\n    catch(error) {\r\n        yield put(actions.listFail(error.message));\r\n    }\r\n}\r\nexport function* autoInitListSaga() {\r\n    yield put(actions.listProcess());\r\n}","import { takeEvery } from \"redux-saga/effects\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\nimport {listProcessSaga, autoInitListSaga} from './list';\r\n\r\nexport function* watchList () {\r\n    yield takeEvery(actionTypes.AUTO_INIT_LIST, autoInitListSaga)\r\n    yield takeEvery(actionTypes.LIST_PROCESS, listProcessSaga);\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport listReducer from './store/reducers/list';\nimport localeReducer from './store/reducers/locale';\nimport {watchList} from './store/sagas';\n\nconst composeEnhancers = composeWithDevTools({\n  trace: true,\n  traceLimit: 25,\n})\n\nconst rootReducer = combineReducers({listReducer, localeReducer});\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n\trootReducer,\n  composeEnhancers(applyMiddleware(thunk, sagaMiddleware))\n);\n\nwindow.store = store;\n\nsagaMiddleware.run(watchList);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Detail\":\"Detail__Detail__28Up6\",\"Spec\":\"Detail__Spec__35t1n\",\"Drawer\":\"Detail__Drawer__39JRc\",\"ShowDrawer\":\"Detail__ShowDrawer__1Vjis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card__Card__3AYzi\",\"Cover\":\"Card__Cover__3zJJV\",\"Avatar\":\"Card__Avatar__1lpa5\"};"],"sourceRoot":""}